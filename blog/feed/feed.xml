<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Blog Title</title>
  <subtitle>This is a longer description about your blog.</subtitle>
  <link href="https://example.com/blog/feed/feed.xml" rel="self" />
  <link href="https://example.com/blog/" />
  <updated>2025-01-11T00:00:00Z</updated>
  <id>https://example.com/blog/</id>
  <author>
    <name>Your Name</name>
  </author>
  <entry>
    <title>Restoring a 22-Year-Old Game’s Audio Hack With V86</title>
    <link href="https://example.com/blog/blog/ds4qb-web/" />
    <updated>2025-01-11T00:00:00Z</updated>
    <id>https://example.com/blog/blog/ds4qb-web/</id>
    <content type="html">&lt;p&gt;The Internet Archive is a great place to find gems like &lt;a href=&quot;https://archive.org/details/SquealerTnt&quot;&gt;Squealer TNT&lt;/a&gt;, a DOS clone of &lt;a href=&quot;https://www.mobygames.com/game/18582/psycho-pigs-uxb/&quot;&gt;“Psycho Pig UXB”&lt;/a&gt; (itself a console port of the Japanese arcade game &lt;a href=&quot;https://en.wikipedia.org/wiki/Butasan&quot;&gt;Butasan&lt;/a&gt;). It’s a top-down game where pigs throw bombs at each other. They squeal when you hit them with a bomb, there’s banjo music, and your pig dances when you win. It’s a delight!&lt;/p&gt;
&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; title=&quot;Gameplay footage of pigs dancing in Squealer TNT&quot;&gt;
  &lt;source src=&quot;https://example.com/blog/blog/ds4qb-web/dance.webm&quot; type=&quot;video/webm&quot;&gt;
  Your browser does not support the video tag.
&lt;/video&gt;
&lt;p&gt;…or at least it would be if it had sound. The Internet Archive’s online player has no audio, making the game a joyless exercise in silent frustration. If I throw a bomb at a cartoon pig, and it doesn’t make a funny sound, what is even the point?&lt;/p&gt;
&lt;p&gt;Luckily I have a holiday tradition of going on esoteric quests involving PC emulation, from making a &lt;a href=&quot;https://parkertomatoes.github.io/basbolt/&quot;&gt;BASIC themed imitation&lt;/a&gt; of Compiler Explorer to stuffing 2,000 demoscene demos from Pouet into a &lt;a href=&quot;https://parkertomatoes.github.io/demo-parade&quot;&gt;carousel&lt;/a&gt;. This year, I’m doing a public service: I’m going to make those pigs squeal again.&lt;/p&gt;
&lt;h2 id=&quot;the-silence-of-the-pigs&quot;&gt;The Silence Of The Pigs&lt;/h2&gt;
&lt;p&gt;Most DOS games use the PC speaker or Sound Blaster and work fine in online DOSBox wrappers like &lt;a href=&quot;https://js-dos.com/overview.html&quot;&gt;js-dos&lt;/a&gt;. This game goes in a weird direction, and fixing the audio is going to need a full PC-in-the-browser emulator like Fabian Hemmer’s &lt;a href=&quot;https://copy.sh/v86&quot;&gt;V86&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To start up a DOS PC in V86, you just need a few files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A QEMU-compatible BIOS file like &lt;a href=&quot;https://seabios.org&quot;&gt;SeaBIOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A QEMU-compatible VGA bios file like &lt;a href=&quot;https://www.nongnu.org/vgabios/&quot;&gt;BOCH’s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A DOS boot disk image like the one &lt;a href=&quot;https://archive.org/details/dos-6.22&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href=&quot;https://unix.stackexchange.com/a/629494&quot;&gt;FAT16 hard disk image&lt;/a&gt; with the game inside.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stub some HTML for the viewport&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;screen_container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pre&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 14px monospace&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 14px&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;canvas&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;canvas&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And start the emulator like so:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; emulator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;emulator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;V86&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;screen_container&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;screen_container&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;bios&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;seabios.bin&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;vga_bios&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;vgabios.bin&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;fda&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;bootdisk.img&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;hda&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; “hda&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;img” &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;autostart&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sure enough, this boots up a DOS prompt. I type SQUEALER to run the game, but it doesn’t even start. It hangs with a strange error:&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/yVLb0_E3Of-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/yVLb0_E3Of-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/yVLb0_E3Of-1280.png&quot; alt=&quot;Error saying &amp;quot;Illegal command: start&amp;quot;&quot; width=&quot;1280&quot; height=&quot;800&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;a-porcine-anachronism&quot;&gt;A Porcine Anachronism&lt;/h2&gt;
&lt;p&gt;Squealer TNT is already strange in that it’s a DOS game written in 2002. It’s further strange in that it uses &lt;a href=&quot;https://web.archive.org/web/20010612125157fw_/http://www.aethersoft.com/html/products.htm&quot;&gt;DS4QB2&lt;/a&gt; as its sound driver. The game runs in real-mode DOS due to it being written with Microsoft QuickBASIC. In order to bust out of the limitations of real mode it &lt;em&gt;cheats&lt;/em&gt; by running a command, &lt;code&gt;START DS4QB2.EXE&lt;/code&gt;. This is a Win9X Visual Basic program that runs in the background and plays sounds using the BASS audio library.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/OvoOETSUnb-1298.avif 1298w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/OvoOETSUnb-1298.webp 1298w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/OvoOETSUnb-1298.svg&quot; alt=&quot;Diagram showing &quot; width=&quot;1298&quot; height=&quot;496&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;The DS4QB2 sound engine takes a &amp;quot;hold my beer&amp;quot; approach to inter-process communication. 16-bit DOS programs in Windows 95 are supposed to be isolated in their little VM86 shell, but thanks to the &lt;a href=&quot;https://devblogs.microsoft.com/oldnewthing/20071224-00/?p=24063&quot;&gt;insanely complex&lt;/a&gt; 16-bit driver fallback mechanism of Windows 95, both 16-bit and 32-bit programs are granted shared access to the legacy DMA controller for floppy disk transfers and ISA cards. DOS programs signal DS4QB2 by writing to the DMA channel 0 address line (aka port 0). And it passes parameters by writing them to a file.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/cUrbVCwsia-1298.avif 1298w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/cUrbVCwsia-1298.webp 1298w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/cUrbVCwsia-1298.svg&quot; alt=&quot;Diagram showing &quot; width=&quot;1298&quot; height=&quot;1014&quot;&gt;&lt;/picture&gt;
&lt;em&gt;You may want to avoid playing this game from a floppy drive&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So if Squealer TNT wants to play a sound, this is the sequence:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The game writes parameters to a file, DS4QB2.DAT&lt;/li&gt;
&lt;li&gt;The game writes a value to port 0 and waits for it to be cleared&lt;/li&gt;
&lt;li&gt;DS4QB2 continuously polls port 0 and detects the audio request&lt;/li&gt;
&lt;li&gt;DS4QB2 reads the parameters from DS4QB2.DAT and plays a sound&lt;/li&gt;
&lt;li&gt;DS4QB2 clears port 0 and the game resumes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It was a cursed solution. Windows NT didn’t use DOS as a bootstrap and it’s NTVDM DOS layer restricts access to all but a few resources. Within a few years, most computers ran Windows XP or Vista and no game that used DS4QB2 could enable audio: the games would place a value on an isolated port 0 and wait forever for nothing to respond.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/6R1zwryHHF-498.avif 498w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/6R1zwryHHF-498.webp 498w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/6R1zwryHHF-498.png&quot; alt=&quot;A cursed monkey&#39;s paw granting a wish&quot; width=&quot;498&quot; height=&quot;379&quot;&gt;&lt;/picture&gt;
&lt;br&gt;&lt;em&gt;”I wish I could use DirectSound for my QuickBASIC game”&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;signals-from-beyond-the-veil&quot;&gt;Signals From Beyond The Veil&lt;/h2&gt;
&lt;p&gt;In order to bring this game’s audio back to life, it needs an audio server to play sounds. So instead of a Windows application, we&#39;ll use a Javascript routine outside the emulator&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/Ow7POT9SDa-1416.avif 1416w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/Ow7POT9SDa-1416.webp 1416w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/Ow7POT9SDa-1416.svg&quot; alt=&quot;Diagram showing SQUALER running in an emulator and talking to a javascript process&quot; width=&quot;1416&quot; height=&quot;547&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;The first order of business is to detect that signal on port 0. Thankfully, V86 has some undocumented APIs to access the emulated PC&#39;s I/O ports and being Javascript, nothing can stop me from using them. DS4QB2 polls the I/O port every 50ms, so I tried doing the same:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;emulator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add_listener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;emulator-ready&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; portValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;  emulator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;v86&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cpu&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;port_read8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;portValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I start the emulator, run SQUEALER:&lt;/p&gt;
&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; title=&quot;Browser console showing a value on port 0&quot;&gt;
  &lt;source src=&quot;https://example.com/blog/blog/ds4qb-web/ping.webm&quot; type=&quot;video/webm&quot;&gt;
  Your browser does not support the video tag.
&lt;/video&gt;
&lt;p&gt;Yes! DS4QB2 uses different values for different commands. A value of 3 means “load sounds”. The game is trying to load sounds!&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/cJq0dNmZdC-1240.avif 1240w&quot;&gt;&lt;source srcset=&quot;https://example.com/blog/blog/ds4qb-web/cJq0dNmZdC-1240.heif 1240w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/cJq0dNmZdC-1240.webp&quot; alt=&quot;&quot; width=&quot;1240&quot; height=&quot;744&quot;&gt;&lt;/picture&gt;
&lt;em&gt;Basically this feeling, but with cartoon pig noises&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;an-unexpected-medium&quot;&gt;An Unexpected Medium&lt;/h2&gt;
&lt;p&gt;Detecting the I/O port is great, but the parameters for the audio command are stuffed in a file on the emulated disk drive. V86 has a file API, but the guest needs to support 9P network filesystem protocol. MS-DOS 6.22 does &lt;em&gt;not&lt;/em&gt; have a driver for the 9P network filesystem protocol.&lt;/p&gt;
&lt;p&gt;No, this calls for a much stupider solution. V86 allows a user to supply an ArrayBuffer instead of a URL for the hard disk.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;‘hda&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;img’&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; hdaBuffer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; emulator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;emulator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;V86&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// …&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;hda&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; hdaBuffer &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// …&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What happens inside that array buffer when the guest uses the disk? Does V86 keep its contents cached into some rarely synchronized internal data structure like DOSBox does? Or does V86 actually perform block-level reads and writes directly to that buffer? To check, I used a &lt;a href=&quot;https://stackoverflow.com/questions/35038884/download-file-from-bytes-in-javascript&quot;&gt;Javascript trick&lt;/a&gt; to convert the buffer to a URL and then download it:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;image&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;application/octet-stream&#39;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; url&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;download &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;hda.img&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;display &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;none&#39;&lt;/span&gt;
a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;revokeObjectURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This downloads “hda.img” after detecting the signal. I mounted the image and there was DS4QB2.DAT, containing a text-formatted list of sound files to load. It wrote the file to the buffer!&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/Pv1c2uBFo9-1216.avif 1216w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/Pv1c2uBFo9-1216.webp 1216w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/Pv1c2uBFo9-1216.png&quot; alt=&quot;Screenshot of finder showing DS4QB2.DAT inside the HD image&quot; width=&quot;1216&quot; height=&quot;882&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;hacks-all-the-way-down&quot;&gt;Hacks All The Way Down&lt;/h2&gt;
&lt;p&gt;So, the HDA array buffer likely contains the contents of the hard disk, as long as DOS isn&#39;t buffering the file. But I need a way to read files off the disk &lt;em&gt;while the game is running&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Sometimes, though, stars just align: a few years ago, I wrote a &lt;a href=&quot;https://github.com/parkertomatoes/fatfs-wasm&quot;&gt;WASM wrapper library&lt;/a&gt; for ChaN’s elegant FatFS library for reading from FAT formatted disks like DOS uses. I intended it for &lt;a href=&quot;https://parkertomatoes.github.io/basbolt&quot;&gt;BasBolt&lt;/a&gt;, but ended up not using it and it was left to rot. Until now!&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; disk &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; FatFsDisk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hdaImage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; portValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;  emulator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;v86&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cpu&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;port_read8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;portValue &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; params &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; disk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; disk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;‘&lt;span class=&quot;token constant&quot;&gt;DS4QB2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;DAT&lt;/span&gt;’&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And sure enough:
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/5vWiCZX47t-640.avif 640w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/blog/blog/ds4qb-web/5vWiCZX47t-640.webp 640w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/blog/blog/ds4qb-web/5vWiCZX47t-640.png&quot; alt=&quot;Screenshot showing the contents of DS4QB2.DAT in the console&quot; width=&quot;640&quot; height=&quot;344&quot;&gt;&lt;/picture&gt;
&lt;em&gt;For a fleeting moment, I was a god&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;then-draw-the-rest-of-the-owl&quot;&gt;Then Draw The Rest Of The Owl&lt;/h2&gt;
&lt;p&gt;After getting the signal and the parameters, the rest of the effort was grunt-work to decode the audio protocol, then reproduce the effect using Javascript. When a command to play a sound was sent, I used &lt;a href=&quot;https://howlerjs.com/&quot;&gt;Howler.js&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; soundContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; disk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; disk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;soundFile&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;soundContent&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &#39;audio&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;wav &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; soundHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Howl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;wav&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
soundHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And to play tracker music, I used &lt;a href=&quot;https://github.com/DrSnuggles/chiptune&quot;&gt;chiptune3.js&lt;/a&gt;, a wrapper around the excellent &lt;a href=&quot;https://openmpt.org/&quot;&gt;OpenMPT&lt;/a&gt; library that plays everything from XM files to MO3. There is a library for literally everything:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; musicContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; disk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; disk&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;musicFile&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; musicHandle &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ChiptuneJsPlayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
musicHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;onInitialized&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    musicHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;musicContent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;buffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After processing the command and writing 0 back to the port, the game unblocks. At last, glorious squealing mayhem!&lt;/p&gt;
&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; title=&quot;A pig dancing to the caption &#39;Wesley smoked some bacon!&#39;&quot;&gt;
  &lt;source src=&quot;https://example.com/blog/blog/ds4qb-web/wesley.webm&quot; type=&quot;video/webm&quot;&gt;
  Your browser does not support the video tag.
&lt;/video&gt;
&lt;em&gt;You can play the game with audio &lt;a href=&quot;https://parkertomatoes.github.io/ds4qb-web-demo/?game=squealer&quot;&gt;here&lt;/a&gt;&lt;/em&gt;
&lt;h2 id=&quot;the-end-product&quot;&gt;The End Product&lt;/h2&gt;
&lt;p&gt;I published the V86 + DS4QB emulator on GitHub here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parkertomatoes/ds4qb-web&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parkertomaotes/ds4qb-web&quot;&gt;Example Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://parkertomatoes.github.io/ds4qb-web-demo&quot;&gt;Sample Gallery with 30 DS4QB games and apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don&#39;t expect anyone to actually use this as a library, but structuring it this way was a nice way to separate the business logic of the emulator from the Vite configuration and game binaries of the client application.&lt;/p&gt;
&lt;p&gt;This post is long, so I plan to make two follow-ups for some tangents:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Supporting DS4QB1, which used the &lt;em&gt;clipboard&lt;/em&gt; to communicate&lt;/li&gt;
&lt;li&gt;Some curious PIT shenanigans that caused some DS4QB games to hang&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;/h2&gt;
&lt;p&gt;I used V86 on this project, and it remains my favorite PC emulator for its accessibility and hackability. There a few notes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I wish there was more documentation for the hardware interfaces. It would be neat but daunting to try to emulate a virt-io device or something like a PCL printer.&lt;/li&gt;
&lt;li&gt;I constantly wished for a way to create user-defined interrupts to replace DOS drivers. Being able to register ports with the undocumented CPU API is useful but feels hacky&lt;/li&gt;
&lt;li&gt;V86 doesn&#39;t bundle well and isn&#39;t distributed on npm officially. It would be much easier to use if it were, and as a bonus I could use a CDN for little projects like this.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During this project I spent time scouring old QBasic community sites for games that used DS4QB2, 20 years after I&#39;d last been there:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I&#39;m still impressed how &lt;em&gt;big&lt;/em&gt; this niche community was back then. Zines, networks, busy forums, and hundreds of projects.&lt;/li&gt;
&lt;li&gt;By 2002-2003, after most AAA software had largely moved on, over half of the games in the Total DOS Collection appear to be made with QBasic or QuickBASIC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This project was also my first time using Vite and Rollup instead of Webpack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vitest is amazing, it just worked out of the box&lt;/li&gt;
&lt;li&gt;Vite&#39;s dev server, however, incredibly frustrating to debug.
&lt;ul&gt;
&lt;li&gt;It didn&#39;t serve WASM and Web Workers, instead returning index.html&lt;/li&gt;
&lt;li&gt;This was solved by excluding buggy dependencies from optimizeDeps&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;optimizeDeps&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    exclude&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&#39;fatfs-wasm&#39;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &#39;chiptune3&#39;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Solved in the production build with the Vite static copy plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vite uses absolute links, which was frustrating if I wanted to test at &amp;quot;/&amp;quot; and deploy to &amp;quot;/subfolder&amp;quot;. I ended up patching the minified Javascript output.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>